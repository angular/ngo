{"version":3,"file":"cli.js","sourceRoot":"","sources":["../../src/ngo/cli.ts"],"names":[],"mappings":";;;AACA,yBAAmC;AACnC,6BAA4B;AAE5B,6BAA4B;AAG5B,EAAE,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,OAAO,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;IACvD,MAAM,IAAI,KAAK,CAAC,sHAKf,CAAC,CAAC;AACL,CAAC;AAED,IAAM,UAAU,GAAG,OAAO,CAAC,GAAG,EAAE,CAAC;AAEjC,IAAM,SAAS,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAClC,IAAM,YAAY,GAAG,WAAW,CAAC;AAEjC,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;IACnC,MAAM,IAAI,KAAK,CAAC,gCAAgC,CAAC,CAAC;AACpD,CAAC;AAED,yEAAyE;AACzE,IAAM,UAAU,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,SAAS,CAAC,OAAO,CAAC,YAAY,EAAE,UAAC,MAAM,IAAK,OAAA,SAAO,MAAQ,EAAf,CAAe,CAAC,CAAC;AAEnG,IAAM,SAAS,GAAG,SAAG,CAAC;IACpB,aAAa,EAAE,WAAI,CAAC,UAAU,EAAE,SAAS,CAAC;IAC1C,cAAc,EAAE,WAAI,CAAC,UAAU,EAAE,UAAU,CAAC;IAC5C,aAAa,EAAE,IAAI;CACpB,CAAC,CAAC;AAEH,kBAAa,CAAC,WAAI,CAAC,UAAU,EAAE,UAAU,CAAC,EAAE,SAAS,CAAC,OAAO,CAAC,CAAC;AAC/D,kBAAa,CAAC,WAAI,CAAC,UAAU,EAAK,UAAU,SAAM,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC","sourcesContent":["#!/usr/bin/env node\r\nimport { writeFileSync } from 'fs';\r\nimport { join } from 'path';\r\n\r\nimport { ngo } from './ngo';\r\n\r\n\r\nif (process.argv.length < 3 || process.argv.length > 4) {\r\n  throw new Error(`\r\n    ngo should be called with either one or two arguments:\r\n\r\n      ngo input.js\r\n      ngo input.js output.js\r\n  `);\r\n}\r\n\r\nconst currentDir = process.cwd();\r\n\r\nconst inputFile = process.argv[2];\r\nconst tsOrJsRegExp = /\\.(j|t)s$/;\r\n\r\nif (!inputFile.match(tsOrJsRegExp)) {\r\n  throw new Error(`Input file must be .js or .ts.`);\r\n}\r\n\r\n// Use provided output file, or add the .ngo suffix before the extension.\r\nconst outputFile = process.argv[3] || inputFile.replace(tsOrJsRegExp, (subStr) => `.ngo${subStr}`);\r\n\r\nconst ngoOutput = ngo({\r\n  inputFilePath: join(currentDir, inputFile),\r\n  outputFilePath: join(currentDir, outputFile),\r\n  emitSourceMap: true,\r\n});\r\n\r\nwriteFileSync(join(currentDir, outputFile), ngoOutput.content);\r\nwriteFileSync(join(currentDir, `${outputFile}.map`), JSON.stringify(ngoOutput.sourceMap));\r\n"]}