{"version":3,"file":"ngo-webpack-loader.js","sourceRoot":"","sources":["../src/ngo-webpack-loader.ts"],"names":[],"mappings":";;AAAA,yCAAiF;AACjF,IAAM,WAAW,GAAG,OAAO,CAAC,cAAc,CAAC,CAAC;AAE5C,6BAA4B;AAO5B,mBAAkC,OAAe,EAAE,iBAA+B;IAChF,IAAI,CAAC,SAAS,EAAE,CAAC;IACjB,IAAM,OAAO,GAAqB,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;IAE/D,IAAM,SAAS,GAAG,SAAG,CAAC,EAAE,OAAO,SAAA,EAAE,aAAa,EAAE,OAAO,CAAC,SAAS,EAAE,CAAC,CAAC;IACrE,IAAM,qBAAqB,GAAG,SAAS,CAAC,SAAS,CAAC;IAClD,IAAI,UAAU,GAAG,SAAS,CAAC,OAAO,CAAC;IAEnC,IAAI,YAAY,GAAG,IAAI,CAAC;IAExB,EAAE,CAAC,CAAC,OAAO,CAAC,SAAS,IAAI,qBAAqB,CAAC,CAAC,CAAC;QAC/C,2EAA2E;QAC3E,UAAU,GAAG,UAAU,CAAC,OAAO,CAAC,oCAAoC,EAAE,EAAE,CAAC,CAAC;QAE1E,EAAE,CAAC,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC;YACvB,0FAA0F;YAC1F,YAAY,GAAG,qBAAqB,CAAC;QACvC,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,2FAA2F;YAC3F,4EAA4E;YAC5E,qBAAqB,CAAC,OAAO,GAAG,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;YACzD,qBAAqB,CAAC,IAAI,GAAG,iBAAiB,CAAC,IAAI,CAAC;YAEpD,wBAAwB;YACxB,IAAM,QAAQ,GAAG,IAAI,8BAAiB,CAAC,qBAAqB,CAAC,CAAC;YAC9D,IAAM,SAAS,GAAG,+BAAkB,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;YAC7D,SAAS,CAAC,cAAc,CAAC,IAAI,8BAAiB,CAAC,iBAAiB,CAAC,CAAC,CAAC;YACnE,YAAY,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC;QACpC,CAAC;IACH,CAAC;IAED,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,UAAU,EAAE,YAAY,CAAC,CAAC;AAChD,CAAC;AAhCD,4BAgCC;AAED,wDAAwD;AACxD,gDAAgD;AAChD,iFAAiF","sourcesContent":["import { RawSourceMap, SourceMapConsumer, SourceMapGenerator } from 'source-map';\r\nconst loaderUtils = require('loader-utils');\r\n\r\nimport { ngo } from './ngo';\r\n\r\n\r\ninterface NgoLoaderOptions {\r\n  sourceMap: boolean;\r\n}\r\n\r\nexport default function ngoLoader(content: string, previousSourceMap: RawSourceMap) {\r\n  this.cacheable();\r\n  const options: NgoLoaderOptions = loaderUtils.getOptions(this);\r\n\r\n  const ngoOutput = ngo({ content, emitSourceMap: options.sourceMap });\r\n  const intermediateSourceMap = ngoOutput.sourceMap;\r\n  let newContent = ngoOutput.content;\r\n\r\n  let newSourceMap = null;\r\n\r\n  if (options.sourceMap && intermediateSourceMap) {\r\n    // Webpack doesn't need sourceMappingURL since we pass them on explicitely.\r\n    newContent = newContent.replace(/^\\/\\/# sourceMappingURL=[^\\r\\n]*/gm, '');\r\n\r\n    if (!previousSourceMap) {\r\n      // If we're emitting sourcemaps but there is no previous one, then we're the first loader.\r\n      newSourceMap = intermediateSourceMap;\r\n    } else {\r\n      // If there's a previous sourcemap, we're an intermediate loader and we have to chain them.\r\n      // Fill in the intermediate sourcemap source as the previous sourcemap file.\r\n      intermediateSourceMap.sources = [previousSourceMap.file];\r\n      intermediateSourceMap.file = previousSourceMap.file;\r\n\r\n      // Chain the sourcemaps.\r\n      const consumer = new SourceMapConsumer(intermediateSourceMap);\r\n      const generator = SourceMapGenerator.fromSourceMap(consumer);\r\n      generator.applySourceMap(new SourceMapConsumer(previousSourceMap));\r\n      newSourceMap = generator.toJSON();\r\n    }\r\n  }\r\n\r\n  this.callback(null, newContent, newSourceMap);\r\n}\r\n\r\n// TODO: investigate weird extra maps at webpack:// root\r\n// without ngo: main.bundle.js, vendor.bundle.js\r\n// with ngo: app.module.ngfactory.js, main.bundle.js, null?37a6, vendor.bundle.js\r\n"]}