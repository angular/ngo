{"version":3,"file":"cli.js","sourceRoot":"","sources":["../../src/purify/cli.ts"],"names":[],"mappings":";;;AACA,yBAAiD;AACjD,6BAA4B;AAE5B,mCAAkC;AAGlC,EAAE,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,OAAO,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;IACvD,MAAM,IAAI,KAAK,CAAC,+HAKf,CAAC,CAAC;AACL,CAAC;AAED,IAAM,UAAU,GAAG,OAAO,CAAC,GAAG,EAAE,CAAC;AAEjC,IAAM,SAAS,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAClC,IAAM,YAAY,GAAG,WAAW,CAAC;AAEjC,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;IACnC,MAAM,IAAI,KAAK,CAAC,gCAAgC,CAAC,CAAC;AACpD,CAAC;AAED,yEAAyE;AACzE,IAAM,UAAU,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,SAAS,CAAC,OAAO,CAAC,YAAY,EAAE,UAAC,MAAM,IAAK,OAAA,YAAU,MAAQ,EAAlB,CAAkB,CAAC,CAAC;AAEtG,IAAM,YAAY,GAAG,eAAM,CAAC,iBAAY,CAAC,WAAI,CAAC,UAAU,EAAE,SAAS,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC;AAEhF,kBAAa,CAAC,WAAI,CAAC,UAAU,EAAE,UAAU,CAAC,EAAE,YAAY,CAAC,CAAC","sourcesContent":["#!/usr/bin/env node\r\nimport { readFileSync, writeFileSync } from 'fs';\r\nimport { join } from 'path';\r\n\r\nimport { purify } from './purify';\r\n\r\n\r\nif (process.argv.length < 3 || process.argv.length > 4) {\r\n  throw new Error(`\r\n    purify should be called with either one or two arguments:\r\n\r\n      purify input.js\r\n      purify input.js output.js\r\n  `);\r\n}\r\n\r\nconst currentDir = process.cwd();\r\n\r\nconst inputFile = process.argv[2];\r\nconst tsOrJsRegExp = /\\.(j|t)s$/;\r\n\r\nif (!inputFile.match(tsOrJsRegExp)) {\r\n  throw new Error(`Input file must be .js or .ts.`);\r\n}\r\n\r\n// Use provided output file, or add the .ngo suffix before the extension.\r\nconst outputFile = process.argv[3] || inputFile.replace(tsOrJsRegExp, (subStr) => `.purify${subStr}`);\r\n\r\nconst purifyOutput = purify(readFileSync(join(currentDir, inputFile), 'UTF-8'));\r\n\r\nwriteFileSync(join(currentDir, outputFile), purifyOutput);\r\n"]}